<resources>
    <string name="app_name">Silhouette</string>
    <string name="l_system_text"><![CDATA[
<html>
<head>
    <style>
        @import url("file:///android_asset/fonts/montserrat_light.ttf");
        body, table {
            color: #RulesTextColor;
            background-color: transparent;
            margin: 0;
            padding: 15px;
            font-family: "Montserrat", sans-serif;
            font-size: 55px;
        }
        table {
            border-collapse: collapse;
            margin: 2px;
        }
        td {
            border: 5px solid #RulesTextColor;
            padding: 15px;
        }
        div {
            margin-bottom: 50;
        }
        li {
            margin-bottom: 20;
        }
        .change {
            color: #RulesSelectionColor
        }
    </style>
</head>
<body>

    <div>
        <b>Фракталы на основе L-систем</b> — это математический способ описания рекурсивных структур.<br>
        Они были разработаны в 1968 году биологом <b>Аристидом Линденмайером</b> для описания моделей роста клеток,
        а позднее стали популярными в компьютерной графике и генеративном искусстве для создания фрактальных узоров.
    </div>
    <div>
        <b>Как работает L-система?</b><br>
        L-система задается тремя основными элементами:
        <ol>
            <li><b>Алфавит</b> — набор символов, которые используются для создания строк. Каждый символ может представлять действие.</li>
            <li><b>Аксиома</b> — начальная строка, с которой начинается построение.</li>
            <li><b>Правила переписывания</b> — набор правил, которые указывают, как заменять каждый символ на более сложную строку символов.</li>
        </ol>
    </div>
    <div>
        На каждом шаге черепашка выполняет инструкции:
        <ul>
            <li>нарисовать вперед \"f\",</li>
            <li>повернуть направо \"+\" или налево \"-\",</li>
            <li>переместиться вперед без рисования линии \"b\".</li>
            <li>сохранить состояние \"(\".</li>
            <li>восстановить состояние \")\".</li>
            <li>присвоить значение \":\".</li>
        </ul>
    </div>
    <div>
        Каждое правило заменяет символ на строку, создавая с каждым шагом более сложную фигуру.
    </div>
    <div>
        Помимо заготовленных команд (f, b, g) в качестве переменных можно использовать любые буквы.<br>
        Например
    </div>
    <div>
        <div>
            После нескольких применений правила из аксиомы получаются следующие значения
        </div>
        <div>
            Аксиома: \"<b>x</b>\"<br>
            Правило: \"<b>x: fx-f</b>\"<br>
            Генерации: <b>5</b>
        </div>
        <div>
        <table>
            <tr>
                <td>0</td>
                <td>x</td>
            </tr>
            <tr>
                <td>1</td>
                <td>fx-f</td>
            </tr>
            <tr>
                <td>2</td>
                <td>f<span class="change">fx-f</span>-f</td>
            </tr>
            <tr>
                <td>3</td>
                <td>ff<span class="change">fx-f</span>-f-f</td>
            </tr>
            <tr>
                <td>4</td>
                <td>fff<span class="change">fx-f</span>-f-f-f</td>
            </tr>
        </table>
        </div>
        <div>
            Так постепенно на экране появляется фрактал.
        </div>
        <div>
            Для лучшего понимания рекомендуем изучить примеры фракталов, приведенные в приложении
        </div>
    </div>

</body>
</html>

]]></string>
</resources>